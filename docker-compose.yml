volumes:
  data:

services:
  postgres:
    container_name: 'postgres'
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${POSTGRES_LOCAL_PORT}:${POSTGRES_PORT}
    volumes:
      - data:/var/lib/postgresql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", '${POSTGRES_DB}' ]
      interval: 10s
      timeout: 10s
      retries: 3
  
  migrator:
    container_name: 'migrator'
    build:
      context: .
      dockerfile: ./src/server/Migrator/Dockerfile
    environment:
      - ConnectionStrings__Postgres=Host=postgres;Port=${POSTGRES_PORT};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Database=${POSTGRES_DB}
    depends_on:
      postgres:
        condition: service_healthy
  
  rabbitmq:
    container_name: 'rabbitmq'
    image: masstransit/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${BROKER_USERNAME}
      - RABBITMQ_DEFAULT_PASS=${BROKER_PASSWORD}
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q status
      interval: 10s
      timeout: 10s
      retries: 3
  
  consumer:
    container_name: 'consumer'
    build:
      context: .
      dockerfile: ./src/server/Consumer/Dockerfile
    environment:
      - ConnectionStrings__Postgres=Host=postgres;Port=${POSTGRES_PORT};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Database=${POSTGRES_DB}
      - Broker__Host=rabbitmq
      - Broker__Username=${BROKER_USERNAME}
      - Broker__Password=${BROKER_PASSWORD}
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully
  
  api:
    container_name: 'api'
    build:
      context: .
      dockerfile: ./src/server/Api/Dockerfile
    environment:
      - ConnectionStrings__Postgres=Host=postgres;Port=${POSTGRES_PORT};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Database=${POSTGRES_DB}
      - Broker__Host=rabbitmq
      - Broker__Username=${BROKER_USERNAME}
      - Broker__Password=${BROKER_PASSWORD}
      - Frontend__Url=${FRONTEND_URL}
    ports:
      - ${API_HTTP_PORT}:80
      - ${API_HTTPS_PORT}:443
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully 
  
  frontend:
    container_name: 'frontend'
    build:
      context: ./src/frontend/
      dockerfile: chat/dockerfile
    ports:
      - ${FRONTEND_LOCAL_PORT}:${FRONTEND_DOCKER_PORT}
    volumes:
      - ./src/frontend/chat/src:/app/src
        