volumes:
  data:
  
services:
  postgres:
    container_name: 'postgres'
    image: postgres:latest
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${POSTGRES_LOCAL_PORT}:${POSTGRES_PORT}
    volumes:
      - data:/var/lib/postgresql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-d", '${POSTGRES_DB}' ]
      interval: 10s
      timeout: 10s
      retries: 3
  
  migrator:
    container_name: 'migrator'
    build:
      context: .
      dockerfile: ./src/server/Migrator/Dockerfile
    environment:
      - ConnectionStrings__Postgres=Host=postgres;Port=${POSTGRES_PORT};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Database=${POSTGRES_DB}
    depends_on:
      postgres:
        condition: service_healthy
  
  api:
    container_name: 'api'
    build:
      context: .
      dockerfile: ./src/server/Api/Dockerfile
    environment:
      - ConnectionStrings__Postgres=Host=postgres;Port=${POSTGRES_PORT};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD};Database=${POSTGRES_DB}
    ports:
      - ${API_HTTP_PORT}:80
      - ${API_HTTPS_PORT}:443
    depends_on:
      postgres:
        condition: service_healthy
      migrator:
        condition: service_completed_successfully 